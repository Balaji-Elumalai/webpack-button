/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/button/button.js":
/*!******************************!*\
  !*** ./src/button/button.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! ../common/common */ \"./src/common/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, common_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.buttonObserver = new ej2_base_3.Observer();\n  var cssClassName = {\n    RTL: 'e-rtl',\n    BUTTON: 'e-btn',\n    PRIMARY: 'e-primary',\n    ICONBTN: 'e-icon-btn'\n  };\n\n  var Button = function (_super) {\n    __extends(Button, _super);\n\n    function Button(options, element) {\n      return _super.call(this, options, element) || this;\n    }\n\n    Button.prototype.preRender = function () {};\n\n    Button.prototype.render = function () {\n      this.initialize();\n      this.removeRippleEffect = ej2_base_3.rippleEffect(this.element, {\n        selector: '.' + cssClassName.BUTTON\n      });\n      this.renderComplete();\n    };\n\n    Button.prototype.initialize = function () {\n      if (this.cssClass) {\n        ej2_base_2.addClass([this.element], this.cssClass.split(' '));\n      }\n\n      if (this.isPrimary) {\n        this.element.classList.add(cssClassName.PRIMARY);\n      }\n\n      if (!ej2_base_1.isBlazor() || ej2_base_1.isBlazor() && this.getModuleName() !== 'progress-btn') {\n        if (this.content) {\n          var tempContent = this.enableHtmlSanitizer ? ej2_base_3.SanitizeHtmlHelper.sanitize(this.content) : this.content;\n          this.element.innerHTML = tempContent;\n        }\n\n        this.setIconCss();\n      }\n\n      if (this.enableRtl) {\n        this.element.classList.add(cssClassName.RTL);\n      }\n\n      if (this.disabled) {\n        this.controlStatus(this.disabled);\n      } else {\n        this.wireEvents();\n      }\n    };\n\n    Button.prototype.controlStatus = function (disabled) {\n      this.element.disabled = disabled;\n    };\n\n    Button.prototype.setIconCss = function () {\n      if (this.iconCss) {\n        var span = this.createElement('span', {\n          className: 'e-btn-icon ' + this.iconCss\n        });\n\n        if (!this.element.textContent.trim()) {\n          this.element.classList.add(cssClassName.ICONBTN);\n        } else {\n          span.classList.add('e-icon-' + this.iconPosition.toLowerCase());\n\n          if (this.iconPosition === 'Top' || this.iconPosition === 'Bottom') {\n            this.element.classList.add('e-' + this.iconPosition.toLowerCase() + '-icon-btn');\n          }\n        }\n\n        var node = this.element.childNodes[0];\n\n        if (node && (this.iconPosition === 'Left' || this.iconPosition === 'Top')) {\n          this.element.insertBefore(span, node);\n        } else {\n          this.element.appendChild(span);\n        }\n      }\n    };\n\n    Button.prototype.wireEvents = function () {\n      if (this.isToggle) {\n        ej2_base_3.EventHandler.add(this.element, 'click', this.btnClickHandler, this);\n      }\n    };\n\n    Button.prototype.unWireEvents = function () {\n      if (this.isToggle) {\n        ej2_base_3.EventHandler.remove(this.element, 'click', this.btnClickHandler);\n      }\n    };\n\n    Button.prototype.btnClickHandler = function () {\n      if (this.element.classList.contains('e-active')) {\n        this.element.classList.remove('e-active');\n      } else {\n        this.element.classList.add('e-active');\n      }\n    };\n\n    Button.prototype.destroy = function () {\n      var classList = [cssClassName.PRIMARY, cssClassName.RTL, cssClassName.ICONBTN, 'e-success', 'e-info', 'e-danger', 'e-warning', 'e-flat', 'e-outline', 'e-small', 'e-bigger', 'e-active', 'e-round', 'e-top-icon-btn', 'e-bottom-icon-btn'];\n\n      if (this.cssClass) {\n        classList = classList.concat(this.cssClass.split(' '));\n      }\n\n      _super.prototype.destroy.call(this);\n\n      ej2_base_2.removeClass([this.element], classList);\n\n      if (!this.element.getAttribute('class')) {\n        this.element.removeAttribute('class');\n      }\n\n      if (this.disabled) {\n        this.element.removeAttribute('disabled');\n      }\n\n      if (this.content) {\n        this.element.innerHTML = this.element.innerHTML.replace(this.content, '');\n      }\n\n      var span = this.element.querySelector('span.e-btn-icon');\n\n      if (span) {\n        ej2_base_2.detach(span);\n      }\n\n      this.unWireEvents();\n\n      if (ej2_base_1.isRippleEnabled) {\n        this.removeRippleEffect();\n      }\n    };\n\n    Button.prototype.getModuleName = function () {\n      return 'btn';\n    };\n\n    Button.prototype.getPersistData = function () {\n      return this.addOnPersist([]);\n    };\n\n    Button.Inject = function () {};\n\n    Button.prototype.onPropertyChanged = function (newProp, oldProp) {\n      var span = this.element.querySelector('span.e-btn-icon');\n\n      for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        switch (prop) {\n          case 'isPrimary':\n            if (newProp.isPrimary) {\n              this.element.classList.add(cssClassName.PRIMARY);\n            } else {\n              this.element.classList.remove(cssClassName.PRIMARY);\n            }\n\n            break;\n\n          case 'disabled':\n            this.controlStatus(newProp.disabled);\n            break;\n\n          case 'iconCss':\n            {\n              if (span) {\n                if (newProp.iconCss) {\n                  span.className = 'e-btn-icon ' + newProp.iconCss;\n\n                  if (this.element.textContent.trim()) {\n                    if (this.iconPosition === 'Left') {\n                      span.classList.add('e-icon-left');\n                    } else {\n                      span.classList.add('e-icon-right');\n                    }\n                  }\n                } else {\n                  ej2_base_2.detach(span);\n                }\n              } else {\n                this.setIconCss();\n              }\n\n              break;\n            }\n\n          case 'iconPosition':\n            ej2_base_2.removeClass([this.element], ['e-top-icon-btn', 'e-bottom-icon-btn']);\n            span = this.element.querySelector('span.e-btn-icon');\n\n            if (span) {\n              ej2_base_2.detach(span);\n            }\n\n            this.setIconCss();\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              ej2_base_2.removeClass([this.element], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              ej2_base_2.addClass([this.element], newProp.cssClass.split(' '));\n            }\n\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              this.element.classList.add(cssClassName.RTL);\n            } else {\n              this.element.classList.remove(cssClassName.RTL);\n            }\n\n            break;\n\n          case 'content':\n            {\n              var node = common_1.getTextNode(this.element);\n\n              if (!node) {\n                this.element.classList.remove(cssClassName.ICONBTN);\n              }\n\n              if (!ej2_base_1.isBlazor() || ej2_base_1.isBlazor() && !this.isServerRendered && this.getModuleName() !== 'progress-btn') {\n                if (this.enableHtmlSanitizer) {\n                  newProp.content = ej2_base_3.SanitizeHtmlHelper.sanitize(newProp.content);\n                }\n\n                this.element.innerHTML = newProp.content;\n                this.setIconCss();\n              }\n\n              break;\n            }\n\n          case 'isToggle':\n            if (newProp.isToggle) {\n              ej2_base_3.EventHandler.add(this.element, 'click', this.btnClickHandler, this);\n            } else {\n              ej2_base_3.EventHandler.remove(this.element, 'click', this.btnClickHandler);\n              ej2_base_2.removeClass([this.element], ['e-active']);\n            }\n\n            break;\n        }\n      }\n    };\n\n    Button.prototype.click = function () {\n      this.element.click();\n    };\n\n    Button.prototype.focusIn = function () {\n      this.element.focus();\n    };\n\n    __decorate([ej2_base_1.Property('Left')], Button.prototype, \"iconPosition\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Button.prototype, \"iconCss\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], Button.prototype, \"disabled\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], Button.prototype, \"isPrimary\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Button.prototype, \"cssClass\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Button.prototype, \"content\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], Button.prototype, \"isToggle\", void 0);\n\n    __decorate([ej2_base_1.Property()], Button.prototype, \"locale\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], Button.prototype, \"enableHtmlSanitizer\", void 0);\n\n    __decorate([ej2_base_2.Event()], Button.prototype, \"created\", void 0);\n\n    Button = __decorate([ej2_base_1.NotifyPropertyChanges], Button);\n    return Button;\n  }(ej2_base_1.Component);\n\n  exports.Button = Button;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/button/button.js?");

/***/ }),

/***/ "./src/button/index.js":
/*!*****************************!*\
  !*** ./src/button/index.js ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./button */ \"./src/button/button.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, button_1) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(button_1);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/button/index.js?");

/***/ }),

/***/ "./src/check-box/check-box.js":
/*!************************************!*\
  !*** ./src/check-box/check-box.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! ./../common/common */ \"./src/common/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, common_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  var CHECK = 'e-check';\n  var DISABLED = 'e-checkbox-disabled';\n  var FRAME = 'e-frame';\n  var INDETERMINATE = 'e-stop';\n  var LABEL = 'e-label';\n  var RIPPLE = 'e-ripple-container';\n  var RIPPLECHECK = 'e-ripple-check';\n  var RIPPLEINDETERMINATE = 'e-ripple-stop';\n  var RTL = 'e-rtl';\n  var WRAPPER = 'e-checkbox-wrapper';\n  var containerAttr = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];\n\n  var CheckBox = function (_super) {\n    __extends(CheckBox, _super);\n\n    function CheckBox(options, element) {\n      var _this = _super.call(this, options, element) || this;\n\n      _this.isFocused = false;\n      _this.isMouseClick = false;\n      _this.clickTriggered = false;\n      _this.validCheck = true;\n      return _this;\n    }\n\n    CheckBox.prototype.changeState = function (state) {\n      var ariaState;\n      var rippleSpan;\n      var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];\n\n      if (ej2_base_3.isRippleEnabled) {\n        rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n      }\n\n      if (state === 'check') {\n        frameSpan.classList.remove(INDETERMINATE);\n        frameSpan.classList.add(CHECK);\n\n        if (rippleSpan) {\n          rippleSpan.classList.remove(RIPPLEINDETERMINATE);\n          rippleSpan.classList.add(RIPPLECHECK);\n        }\n\n        ariaState = 'true';\n        this.element.checked = true;\n\n        if (this.element.required && this.validCheck) {\n          this.element.checked = false;\n          this.validCheck = false;\n        } else if (this.element.required) {\n          this.validCheck = true;\n        }\n      } else if (state === 'uncheck') {\n        ej2_base_3.removeClass([frameSpan], [CHECK, INDETERMINATE]);\n\n        if (rippleSpan) {\n          ej2_base_3.removeClass([rippleSpan], [RIPPLECHECK, RIPPLEINDETERMINATE]);\n        }\n\n        ariaState = 'false';\n        this.element.checked = false;\n\n        if (this.element.required && this.validCheck) {\n          this.element.checked = true;\n          this.validCheck = false;\n        } else if (this.element.required) {\n          this.validCheck = true;\n        }\n      } else {\n        frameSpan.classList.remove(CHECK);\n        frameSpan.classList.add(INDETERMINATE);\n\n        if (rippleSpan) {\n          rippleSpan.classList.remove(RIPPLECHECK);\n          rippleSpan.classList.add(RIPPLEINDETERMINATE);\n        }\n\n        ariaState = 'mixed';\n        this.element.indeterminate = true;\n      }\n    };\n\n    CheckBox.prototype.clickHandler = function (event) {\n      if (event.target.tagName === 'INPUT' && this.clickTriggered) {\n        this.clickTriggered = false;\n        return;\n      }\n\n      if (event.target.tagName === 'SPAN' || event.target.tagName === 'LABEL') {\n        this.clickTriggered = true;\n      }\n\n      if (this.isMouseClick) {\n        this.focusOutHandler();\n        this.isMouseClick = false;\n      }\n\n      if (this.indeterminate) {\n        this.changeState(this.checked ? 'check' : 'uncheck');\n        this.indeterminate = false;\n        this.element.indeterminate = false;\n      } else if (this.checked) {\n        this.changeState('uncheck');\n        this.checked = false;\n      } else {\n        this.changeState('check');\n        this.checked = true;\n      }\n\n      var changeEventArgs = {\n        checked: this.updateVueArrayModel(false),\n        event: event\n      };\n      this.trigger('change', changeEventArgs);\n      event.stopPropagation();\n    };\n\n    CheckBox.prototype.destroy = function () {\n      var _this = this;\n\n      var wrapper = this.getWrapper();\n\n      _super.prototype.destroy.call(this);\n\n      if (this.wrapper) {\n        wrapper = this.wrapper;\n\n        if (!this.disabled) {\n          this.unWireEvents();\n        }\n\n        if (this.tagName === 'INPUT') {\n          if (this.getWrapper() && wrapper.parentNode) {\n            wrapper.parentNode.insertBefore(this.element, wrapper);\n          }\n\n          ej2_base_3.detach(wrapper);\n          this.element.checked = false;\n\n          if (this.indeterminate) {\n            this.element.indeterminate = false;\n          }\n\n          ['name', 'value', 'disabled'].forEach(function (key) {\n            _this.element.removeAttribute(key);\n          });\n        } else {\n          ['class'].forEach(function (key) {\n            wrapper.removeAttribute(key);\n          });\n          wrapper.innerHTML = '';\n        }\n      }\n    };\n\n    CheckBox.prototype.focusHandler = function () {\n      this.isFocused = true;\n    };\n\n    CheckBox.prototype.focusOutHandler = function () {\n      var wrapper = this.getWrapper();\n\n      if (wrapper) {\n        wrapper.classList.remove('e-focus');\n      }\n\n      this.isFocused = false;\n    };\n\n    CheckBox.prototype.getModuleName = function () {\n      return 'checkbox';\n    };\n\n    CheckBox.prototype.getPersistData = function () {\n      return this.addOnPersist(['checked', 'indeterminate']);\n    };\n\n    CheckBox.prototype.getWrapper = function () {\n      if (this.element && this.element.parentElement) {\n        return this.element.parentElement.parentElement;\n      } else {\n        return null;\n      }\n    };\n\n    CheckBox.prototype.initialize = function () {\n      if (ej2_base_2.isNullOrUndefined(this.initialCheckedValue)) {\n        this.initialCheckedValue = this.checked;\n      }\n\n      if (this.name) {\n        this.element.setAttribute('name', this.name);\n      }\n\n      if (this.value) {\n        this.element.setAttribute('value', this.value);\n\n        if (this.isVue && typeof this.value === 'boolean' && this.value === true) {\n          this.setProperties({\n            'checked': true\n          }, true);\n        }\n      }\n\n      if (this.checked) {\n        this.changeState('check');\n      }\n\n      if (this.indeterminate) {\n        this.changeState();\n      }\n\n      if (this.disabled) {\n        this.setDisabled();\n      }\n    };\n\n    CheckBox.prototype.initWrapper = function () {\n      var wrapper = this.element.parentElement;\n\n      if (!wrapper.classList.contains(WRAPPER)) {\n        wrapper = this.createElement('div', {\n          className: WRAPPER\n        });\n        this.element.parentNode.insertBefore(wrapper, this.element);\n      }\n\n      var label = this.createElement('label', {\n        attrs: {\n          \"for\": this.element.id\n        }\n      });\n      var frameSpan = this.createElement('span', {\n        className: 'e-icons ' + FRAME\n      });\n      wrapper.classList.add('e-wrapper');\n\n      if (this.enableRtl) {\n        wrapper.classList.add(RTL);\n      }\n\n      if (this.cssClass) {\n        ej2_base_3.addClass([wrapper], this.cssClass.split(' '));\n      }\n\n      wrapper.appendChild(label);\n      label.appendChild(this.element);\n      common_1.setHiddenInput(this, label);\n      label.appendChild(frameSpan);\n\n      if (ej2_base_3.isRippleEnabled) {\n        var rippleSpan = this.createElement('span', {\n          className: RIPPLE\n        });\n\n        if (this.labelPosition === 'Before') {\n          label.appendChild(rippleSpan);\n        } else {\n          label.insertBefore(rippleSpan, frameSpan);\n        }\n\n        ej2_base_3.rippleEffect(rippleSpan, {\n          duration: 400,\n          isCenterRipple: true\n        });\n      }\n\n      if (this.label) {\n        this.setText(this.label);\n      }\n    };\n\n    CheckBox.prototype.keyUpHandler = function () {\n      if (this.isFocused) {\n        this.getWrapper().classList.add('e-focus');\n      }\n    };\n\n    CheckBox.prototype.labelMouseDownHandler = function (e) {\n      this.isMouseClick = true;\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n      common_1.rippleMouseHandler(e, rippleSpan);\n    };\n\n    CheckBox.prototype.labelMouseUpHandler = function (e) {\n      this.isMouseClick = true;\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n\n      if (rippleSpan) {\n        var rippleElem = rippleSpan.querySelectorAll('.e-ripple-element');\n\n        for (var i = 0; i < rippleElem.length - 1; i++) {\n          rippleSpan.removeChild(rippleSpan.childNodes[i]);\n        }\n\n        common_1.rippleMouseHandler(e, rippleSpan);\n      }\n    };\n\n    CheckBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n      var wrapper = this.getWrapper();\n\n      for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        switch (prop) {\n          case 'checked':\n            this.indeterminate = false;\n            this.element.indeterminate = false;\n            this.changeState(newProp.checked ? 'check' : 'uncheck');\n            break;\n\n          case 'indeterminate':\n            if (newProp.indeterminate) {\n              this.changeState();\n            } else {\n              this.element.indeterminate = false;\n              this.changeState(this.checked ? 'check' : 'uncheck');\n            }\n\n            break;\n\n          case 'disabled':\n            if (newProp.disabled) {\n              this.setDisabled();\n              this.wrapper = this.getWrapper();\n              this.unWireEvents();\n            } else {\n              this.element.disabled = false;\n              wrapper.classList.remove(DISABLED);\n              wrapper.setAttribute('aria-disabled', 'false');\n              this.wireEvents();\n            }\n\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              ej2_base_3.removeClass([wrapper], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              ej2_base_3.addClass([wrapper], newProp.cssClass.split(' '));\n            }\n\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              wrapper.classList.add(RTL);\n            } else {\n              wrapper.classList.remove(RTL);\n            }\n\n            break;\n\n          case 'label':\n            this.setText(newProp.label);\n            break;\n\n          case 'labelPosition':\n            {\n              var label = wrapper.getElementsByClassName(LABEL)[0];\n              var labelWrap = wrapper.getElementsByTagName('label')[0];\n              ej2_base_3.detach(label);\n\n              if (newProp.labelPosition === 'After') {\n                labelWrap.appendChild(label);\n              } else {\n                labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);\n              }\n\n              break;\n            }\n\n          case 'name':\n            this.element.setAttribute('name', newProp.name);\n            break;\n\n          case 'value':\n            if (this.isVue && _typeof(newProp.value) === 'object') {\n              break;\n            }\n\n            this.element.setAttribute('value', newProp.value);\n            break;\n\n          case 'htmlAttributes':\n            this.updateHtmlAttributeToWrapper();\n            break;\n        }\n      }\n    };\n\n    CheckBox.prototype.preRender = function () {\n      var element = this.element;\n      this.tagName = this.element.tagName;\n      element = common_1.wrapperInitialize(this.createElement, 'EJS-CHECKBOX', 'checkbox', element, WRAPPER, 'checkbox');\n      this.element = element;\n\n      if (this.element.getAttribute('type') !== 'checkbox') {\n        this.element.setAttribute('type', 'checkbox');\n      }\n\n      if (!this.element.id) {\n        this.element.id = ej2_base_3.getUniqueID('e-' + this.getModuleName());\n      }\n    };\n\n    CheckBox.prototype.render = function () {\n      this.initWrapper();\n      this.initialize();\n\n      if (!this.disabled) {\n        this.wireEvents();\n      }\n\n      this.updateHtmlAttributeToWrapper();\n      this.updateVueArrayModel(true);\n      this.renderComplete();\n      this.wrapper = this.getWrapper();\n    };\n\n    CheckBox.prototype.setDisabled = function () {\n      var wrapper = this.getWrapper();\n      this.element.disabled = true;\n      wrapper.classList.add(DISABLED);\n      wrapper.setAttribute('aria-disabled', 'true');\n    };\n\n    CheckBox.prototype.setText = function (text) {\n      var wrapper = this.getWrapper();\n\n      if (!wrapper) {\n        return;\n      }\n\n      var label = wrapper.getElementsByClassName(LABEL)[0];\n\n      if (label) {\n        label.textContent = text;\n      } else {\n        text = this.enableHtmlSanitizer ? ej2_base_2.SanitizeHtmlHelper.sanitize(text) : text;\n        label = this.createElement('span', {\n          className: LABEL,\n          innerHTML: text\n        });\n        var labelWrap = wrapper.getElementsByTagName('label')[0];\n\n        if (this.labelPosition === 'Before') {\n          labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);\n        } else {\n          labelWrap.appendChild(label);\n        }\n      }\n    };\n\n    CheckBox.prototype.changeHandler = function (e) {\n      e.stopPropagation();\n    };\n\n    CheckBox.prototype.formResetHandler = function () {\n      this.checked = this.initialCheckedValue;\n      this.element.checked = this.initialCheckedValue;\n    };\n\n    CheckBox.prototype.unWireEvents = function () {\n      var wrapper = this.wrapper;\n      ej2_base_2.EventHandler.remove(wrapper, 'click', this.clickHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'focus', this.focusHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      var label = wrapper.getElementsByTagName('label')[0];\n      ej2_base_2.EventHandler.remove(label, 'mousedown', this.labelMouseDownHandler);\n      ej2_base_2.EventHandler.remove(label, 'mouseup', this.labelMouseUpHandler);\n      var formElem = ej2_base_3.closest(this.element, 'form');\n\n      if (formElem) {\n        ej2_base_2.EventHandler.remove(formElem, 'reset', this.formResetHandler);\n      }\n\n      if (this.tagName === 'EJS-CHECKBOX') {\n        ej2_base_2.EventHandler.remove(this.element, 'change', this.changeHandler);\n      }\n    };\n\n    CheckBox.prototype.wireEvents = function () {\n      var wrapper = this.getWrapper();\n      ej2_base_2.EventHandler.add(wrapper, 'click', this.clickHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'focus', this.focusHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      var label = wrapper.getElementsByTagName('label')[0];\n      ej2_base_2.EventHandler.add(label, 'mousedown', this.labelMouseDownHandler, this);\n      ej2_base_2.EventHandler.add(label, 'mouseup', this.labelMouseUpHandler, this);\n      var formElem = ej2_base_3.closest(this.element, 'form');\n\n      if (formElem) {\n        ej2_base_2.EventHandler.add(formElem, 'reset', this.formResetHandler, this);\n      }\n\n      if (this.tagName === 'EJS-CHECKBOX') {\n        ej2_base_2.EventHandler.add(this.element, 'change', this.changeHandler, this);\n      }\n    };\n\n    CheckBox.prototype.updateVueArrayModel = function (init) {\n      if (this.isVue && _typeof(this.value) === 'object') {\n        var value = this.element.value;\n\n        if (value && this.value) {\n          if (init) {\n            for (var i = 0; i < this.value.length; i++) {\n              if (value === this.value[i]) {\n                this.changeState('check');\n                this.setProperties({\n                  'checked': true\n                }, true);\n              }\n            }\n          } else {\n            var index = this.value.indexOf(value);\n\n            if (this.checked) {\n              if (index < 0) {\n                this.value.push(value);\n              }\n            } else {\n              if (index > -1) {\n                this.value.splice(index, 1);\n              }\n            }\n\n            return this.value;\n          }\n        }\n      }\n\n      return this.validCheck ? this.element.checked : !this.element.checked;\n    };\n\n    CheckBox.prototype.updateHtmlAttributeToWrapper = function () {\n      if (!ej2_base_2.isNullOrUndefined(this.htmlAttributes)) {\n        for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n          var key = _a[_i];\n\n          if (containerAttr.indexOf(key) > -1) {\n            var wrapper = this.getWrapper();\n\n            if (key === 'class') {\n              ej2_base_3.addClass([wrapper], this.htmlAttributes[key].split(' '));\n            } else if (key === 'title') {\n              wrapper.setAttribute(key, this.htmlAttributes[key]);\n            } else if (key === 'style') {\n              var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];\n              frameSpan.setAttribute(key, this.htmlAttributes[key]);\n            } else {\n              this.element.setAttribute(key, this.htmlAttributes[key]);\n            }\n          }\n        }\n      }\n    };\n\n    CheckBox.prototype.click = function () {\n      this.element.click();\n    };\n\n    CheckBox.prototype.focusIn = function () {\n      this.element.focus();\n    };\n\n    __decorate([ej2_base_2.Event()], CheckBox.prototype, \"change\", void 0);\n\n    __decorate([ej2_base_2.Event()], CheckBox.prototype, \"created\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], CheckBox.prototype, \"checked\", void 0);\n\n    __decorate([ej2_base_1.Property('')], CheckBox.prototype, \"cssClass\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], CheckBox.prototype, \"disabled\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], CheckBox.prototype, \"indeterminate\", void 0);\n\n    __decorate([ej2_base_1.Property('')], CheckBox.prototype, \"label\", void 0);\n\n    __decorate([ej2_base_1.Property('After')], CheckBox.prototype, \"labelPosition\", void 0);\n\n    __decorate([ej2_base_1.Property('')], CheckBox.prototype, \"name\", void 0);\n\n    __decorate([ej2_base_1.Property('')], CheckBox.prototype, \"value\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], CheckBox.prototype, \"enableHtmlSanitizer\", void 0);\n\n    __decorate([ej2_base_1.Property({})], CheckBox.prototype, \"htmlAttributes\", void 0);\n\n    CheckBox = __decorate([ej2_base_1.NotifyPropertyChanges], CheckBox);\n    return CheckBox;\n  }(ej2_base_1.Component);\n\n  exports.CheckBox = CheckBox;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/check-box/check-box.js?");

/***/ }),

/***/ "./src/check-box/index.js":
/*!********************************!*\
  !*** ./src/check-box/index.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./check-box */ \"./src/check-box/check-box.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, check_box_1) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(check_box_1);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/check-box/index.js?");

/***/ }),

/***/ "./src/chips/chip-list.js":
/*!********************************!*\
  !*** ./src/chips/chip-list.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.classNames = {\n    chipSet: 'e-chip-set',\n    chip: 'e-chip',\n    avatar: 'e-chip-avatar',\n    text: 'e-chip-text',\n    icon: 'e-chip-icon',\n    \"delete\": 'e-chip-delete',\n    deleteIcon: 'e-dlt-btn',\n    multiSelection: 'e-multi-selection',\n    singleSelection: 'e-selection',\n    active: 'e-active',\n    chipWrapper: 'e-chip-avatar-wrap',\n    iconWrapper: 'e-chip-icon-wrap',\n    focused: 'e-focused',\n    disabled: 'e-disabled',\n    rtl: 'e-rtl'\n  };\n\n  var ChipList = function (_super) {\n    __extends(ChipList, _super);\n\n    function ChipList(options, element) {\n      var _this = _super.call(this, options, element) || this;\n\n      _this.multiSelectedChip = [];\n      return _this;\n    }\n\n    ChipList.prototype.preRender = function () {};\n\n    ChipList.prototype.chipType = function () {\n      return this.chips && this.chips.length && this.chips.length > 0;\n    };\n\n    ChipList.prototype.render = function () {\n      var property;\n      this.type = this.chips.length ? 'chipset' : this.text || this.element.innerText ? 'chip' : 'chipset';\n      this.setAttributes();\n      this.createChip();\n      this.setRtl();\n      this.select(this.selectedChips, property);\n      this.wireEvent(false);\n      this.rippleFunction = ej2_base_2.rippleEffect(this.element, {\n        selector: '.e-chip'\n      });\n      this.renderComplete();\n    };\n\n    ChipList.prototype.createChip = function () {\n      this.innerText = this.element.innerText && this.element.innerText.length !== 0 ? this.element.innerText.trim() : this.element.innerText;\n      this.element.innerHTML = '';\n      this.chipCreation(this.type === 'chip' ? [this.innerText ? this.innerText : this.text] : this.chips);\n    };\n\n    ChipList.prototype.setAttributes = function () {\n      if (this.type === 'chip') {\n        this.element.tabIndex = 0;\n        this.element.setAttribute('role', 'option');\n      } else {\n        this.element.classList.add(exports.classNames.chipSet);\n        this.element.setAttribute('role', 'listbox');\n\n        if (this.selection === 'Multiple') {\n          this.element.classList.add(exports.classNames.multiSelection);\n          this.element.setAttribute('aria-multiselectable', 'true');\n        } else if (this.selection === 'Single') {\n          this.element.classList.add(exports.classNames.singleSelection);\n          this.element.setAttribute('aria-multiselectable', 'false');\n        } else {\n          this.element.setAttribute('aria-multiselectable', 'false');\n        }\n      }\n    };\n\n    ChipList.prototype.setRtl = function () {\n      this.element.classList[this.enableRtl ? 'add' : 'remove'](exports.classNames.rtl);\n    };\n\n    ChipList.prototype.chipCreation = function (data) {\n      var chipListArray = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var fieldsData = this.getFieldValues(data[i]);\n        var chipArray = this.elementCreation(fieldsData);\n        var className = (exports.classNames.chip + ' ' + (fieldsData.enabled ? ' ' : exports.classNames.disabled) + ' ' + (fieldsData.avatarIconCss || fieldsData.avatarText ? exports.classNames.chipWrapper : fieldsData.leadingIconCss ? exports.classNames.iconWrapper : ' ') + ' ' + fieldsData.cssClass).split(' ').filter(function (css) {\n          return css;\n        });\n\n        if (!this.chipType()) {\n          chipListArray = chipArray;\n          ej2_base_3.addClass([this.element], className);\n          this.element.setAttribute('aria-label', fieldsData.text);\n\n          if (fieldsData.value) {\n            this.element.setAttribute('data-value', fieldsData.value.toString());\n          }\n        } else {\n          var wrapper = this.createElement('DIV', {\n            className: className.join(' '),\n            attrs: {\n              tabIndex: '0',\n              role: 'option',\n              'aria-label': fieldsData.text,\n              'aria-selected': 'false'\n            }\n          });\n\n          if (fieldsData.value) {\n            wrapper.setAttribute('data-value', fieldsData.value.toString());\n          }\n\n          ej2_base_1.append(chipArray, wrapper);\n          chipListArray.push(wrapper);\n        }\n      }\n\n      ej2_base_1.append(chipListArray, this.element);\n    };\n\n    ChipList.prototype.getFieldValues = function (data) {\n      var chipEnabled = !(this.enabled.toString() === 'false');\n      var fields = {\n        text: _typeof(data) === 'object' ? data.text ? data.text.toString() : this.text.toString() : !this.chipType() ? this.innerText ? this.innerText : this.text.toString() : data.toString(),\n        cssClass: _typeof(data) === 'object' ? data.cssClass ? data.cssClass.toString() : this.cssClass.toString() : this.cssClass.toString(),\n        leadingIconCss: _typeof(data) === 'object' ? data.leadingIconCss ? data.leadingIconCss.toString() : this.leadingIconCss.toString() : this.leadingIconCss.toString(),\n        avatarIconCss: _typeof(data) === 'object' ? data.avatarIconCss ? data.avatarIconCss.toString() : this.avatarIconCss.toString() : this.avatarIconCss.toString(),\n        avatarText: _typeof(data) === 'object' ? data.avatarText ? data.avatarText.toString() : this.avatarText.toString() : this.avatarText.toString(),\n        trailingIconCss: _typeof(data) === 'object' ? data.trailingIconCss ? data.trailingIconCss.toString() : this.trailingIconCss.toString() : this.trailingIconCss.toString(),\n        enabled: _typeof(data) === 'object' ? !ej2_base_1.isNullOrUndefined(data.enabled) ? data.enabled.toString() === 'false' ? false : true : chipEnabled : chipEnabled,\n        value: _typeof(data) === 'object' ? data.value ? data.value.toString() : null : null,\n        leadingIconUrl: _typeof(data) === 'object' ? data.leadingIconUrl ? data.leadingIconUrl.toString() : this.leadingIconUrl : this.leadingIconUrl,\n        trailingIconUrl: _typeof(data) === 'object' ? data.trailingIconUrl ? data.trailingIconUrl.toString() : this.trailingIconUrl : this.trailingIconUrl\n      };\n      return fields;\n    };\n\n    ChipList.prototype.elementCreation = function (fields) {\n      var chipArray = [];\n\n      if (fields.avatarText || fields.avatarIconCss) {\n        var className = (exports.classNames.avatar + ' ' + fields.avatarIconCss).trim();\n        var chipAvatarElement = this.createElement('span', {\n          className: className\n        });\n        chipAvatarElement.innerText = fields.avatarText;\n        chipArray.push(chipAvatarElement);\n      } else if (fields.leadingIconCss) {\n        var className = (exports.classNames.icon + ' ' + fields.leadingIconCss).trim();\n        var chipIconElement = this.createElement('span', {\n          className: className\n        });\n        chipArray.push(chipIconElement);\n      } else if (fields.leadingIconUrl) {\n        var className = (exports.classNames.avatar + ' ' + 'image-url').trim();\n        var chipIconElement = this.createElement('span', {\n          className: className\n        });\n        chipIconElement.style.backgroundImage = 'url(' + fields.leadingIconUrl + ')';\n        chipArray.push(chipIconElement);\n      }\n\n      var chipTextElement = this.createElement('span', {\n        className: exports.classNames.text\n      });\n      chipTextElement.innerText = fields.text;\n      chipArray.push(chipTextElement);\n\n      if (fields.trailingIconCss || this.chipType() && this.enableDelete) {\n        var className = (exports.classNames[\"delete\"] + ' ' + (fields.trailingIconCss ? fields.trailingIconCss : exports.classNames.deleteIcon)).trim();\n        var chipdeleteElement = this.createElement('span', {\n          className: className\n        });\n        chipArray.push(chipdeleteElement);\n      } else if (fields.trailingIconUrl) {\n        var className = 'trailing-icon-url'.trim();\n        var chipIconsElement = this.createElement('span', {\n          className: className\n        });\n        chipIconsElement.style.backgroundImage = 'url(' + fields.trailingIconUrl + ')';\n        chipArray.push(chipIconsElement);\n      }\n\n      return chipArray;\n    };\n\n    ChipList.prototype.find = function (fields) {\n      var chipData;\n      var chipElement = fields instanceof HTMLElement ? fields : this.element.querySelectorAll('.' + exports.classNames.chip)[fields];\n\n      if (chipElement && this.chipType()) {\n        chipData = {\n          text: undefined,\n          index: undefined,\n          element: undefined,\n          data: undefined\n        };\n        chipData.index = Array.prototype.slice.call(this.element.querySelectorAll('.' + exports.classNames.chip)).indexOf(chipElement);\n        chipData.text = _typeof(this.chips[chipData.index]) === 'object' ? this.chips[chipData.index].text ? this.chips[chipData.index].text.toString() : '' : this.chips[chipData.index].toString();\n        chipData.data = this.chips[chipData.index];\n        chipData.element = chipElement;\n      }\n\n      return chipData;\n    };\n\n    ChipList.prototype.add = function (chipsData) {\n      var _a;\n\n      if (this.type !== 'chip') {\n        var fieldData = chipsData instanceof Array ? chipsData : [chipsData];\n\n        (_a = this.chips).push.apply(_a, fieldData);\n\n        this.chipCreation(fieldData);\n      }\n    };\n\n    ChipList.prototype.select = function (fields, selectionType) {\n      this.onSelect(fields, false, selectionType);\n    };\n\n    ChipList.prototype.multiSelection = function (newProp) {\n      var items = this.element.querySelectorAll('.' + 'e-chip');\n\n      for (var j = 0; j < newProp.length; j++) {\n        if (typeof newProp[j] === 'string') {\n          for (var k = 0; k < items.length; k++) {\n            if (newProp[j] !== k) {\n              if (newProp[j] === items[k].attributes[5].value) {\n                this.multiSelectedChip.push(k);\n                break;\n              }\n            }\n          }\n        } else {\n          this.multiSelectedChip.push(newProp[j]);\n        }\n      }\n    };\n\n    ChipList.prototype.onSelect = function (fields, callFromProperty, selectionType) {\n      var index;\n      var chipNodes;\n      var chipValue;\n\n      if (this.chipType() && this.selection !== 'None') {\n        if (callFromProperty) {\n          var chipElements = this.element.querySelectorAll('.' + exports.classNames.chip);\n\n          for (var i = 0; i < chipElements.length; i++) {\n            chipElements[i].setAttribute('aria-selected', 'false');\n            chipElements[i].classList.remove(exports.classNames.active);\n          }\n        }\n\n        var fieldData = fields instanceof Array ? fields : [fields];\n\n        for (var i = 0; i < fieldData.length; i++) {\n          var chipElement = fieldData[i] instanceof HTMLElement ? fieldData[i] : this.element.querySelectorAll('.' + exports.classNames.chip)[fieldData[i]];\n\n          if (selectionType !== 'index') {\n            for (var j = 0; j < this.chips.length; j++) {\n              chipNodes = this.element.querySelectorAll('.' + exports.classNames.chip)[j];\n              var fieldsData = this.getFieldValues(this.chips[j]);\n\n              if (selectionType === 'value') {\n                if (fieldsData.value !== null) {\n                  chipValue = chipNodes.dataset.value;\n                }\n              } else if (selectionType === 'text') {\n                chipValue = chipNodes.innerText;\n              }\n\n              if (chipValue === fieldData[i].toString()) {\n                index = j;\n                chipElement = this.element.querySelectorAll('.' + exports.classNames.chip)[index];\n              }\n            }\n          }\n\n          if (chipElement instanceof HTMLElement) {\n            this.selectionHandler(chipElement);\n          }\n        }\n      }\n    };\n\n    ChipList.prototype.remove = function (fields) {\n      var _this = this;\n\n      if (this.chipType()) {\n        var fieldData = fields instanceof Array ? fields : [fields];\n        var chipElements_1 = [];\n        var chipCollection_1 = this.element.querySelectorAll('.' + exports.classNames.chip);\n        fieldData.forEach(function (data) {\n          var chipElement = data instanceof HTMLElement ? data : chipCollection_1[data];\n\n          if (chipElement instanceof HTMLElement) {\n            chipElements_1.push(chipElement);\n          }\n        });\n        chipElements_1.forEach(function (element) {\n          var chips = _this.element.querySelectorAll('.' + exports.classNames.chip);\n\n          var index = Array.prototype.slice.call(chips).indexOf(element);\n\n          _this.deleteHandler(element, index);\n        });\n      }\n    };\n\n    ChipList.prototype.getSelectedChips = function () {\n      var selectedChips;\n\n      if (this.chipType() && this.selection !== 'None') {\n        var selectedItems = {\n          texts: [],\n          Indexes: [],\n          data: [],\n          elements: []\n        };\n        var items = this.element.querySelectorAll('.' + exports.classNames.active);\n\n        for (var i = 0; i < items.length; i++) {\n          var chip = items[i];\n          selectedItems.elements.push(chip);\n          var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + exports.classNames.chip)).indexOf(chip);\n          selectedItems.Indexes.push(index);\n          selectedItems.data.push(this.chips[index]);\n          var text = _typeof(this.chips[index]) === 'object' ? this.chips[index].text ? this.chips[index].text.toString() : null : this.chips[index].toString();\n          selectedItems.texts.push(text);\n        }\n\n        var selectedItem = {\n          text: selectedItems.texts[0],\n          index: selectedItems.Indexes[0],\n          data: selectedItems.data[0],\n          element: selectedItems.elements[0]\n        };\n        selectedChips = !ej2_base_1.isNullOrUndefined(selectedItem.index) ? this.selection === 'Multiple' ? selectedItems : selectedItem : undefined;\n      }\n\n      return selectedChips;\n    };\n\n    ChipList.prototype.wireEvent = function (unWireEvent) {\n      if (!unWireEvent) {\n        ej2_base_3.EventHandler.add(this.element, 'click', this.clickHandler, this);\n        ej2_base_3.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        ej2_base_3.EventHandler.add(this.element, 'keydown', this.keyHandler, this);\n        ej2_base_3.EventHandler.add(this.element, 'keyup', this.keyHandler, this);\n      } else {\n        ej2_base_3.EventHandler.remove(this.element, 'click', this.clickHandler);\n        ej2_base_3.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        ej2_base_3.EventHandler.remove(this.element, 'keydown', this.keyHandler);\n        ej2_base_3.EventHandler.remove(this.element, 'keyup', this.keyHandler);\n      }\n    };\n\n    ChipList.prototype.keyHandler = function (e) {\n      if (e.target.classList.contains(exports.classNames.chip)) {\n        if (e.type === 'keydown') {\n          if (e.keyCode === 13 || e.keyCode === 32) {\n            this.clickHandler(e);\n          } else if (e.keyCode === 46 && this.enableDelete) {\n            this.clickHandler(e, true);\n          }\n        } else if (e.keyCode === 9) {\n          this.focusInHandler(e.target);\n        }\n      }\n    };\n\n    ChipList.prototype.focusInHandler = function (chipWrapper) {\n      if (!chipWrapper.classList.contains(exports.classNames.focused)) {\n        chipWrapper.classList.add(exports.classNames.focused);\n      }\n    };\n\n    ChipList.prototype.focusOutHandler = function (e) {\n      var chipWrapper = ej2_base_2.closest(e.target, '.' + exports.classNames.chip);\n      var focusedElement = !this.chipType() ? this.element.classList.contains(exports.classNames.focused) ? this.element : null : this.element.querySelector('.' + exports.classNames.focused);\n\n      if (chipWrapper && focusedElement) {\n        focusedElement.classList.remove(exports.classNames.focused);\n      }\n    };\n\n    ChipList.prototype.clickHandler = function (e, del) {\n      var _this = this;\n\n      if (del === void 0) {\n        del = false;\n      }\n\n      var chipWrapper = ej2_base_2.closest(e.target, '.' + exports.classNames.chip);\n\n      if (chipWrapper) {\n        var chipDataArgs = void 0;\n\n        if (this.chipType()) {\n          chipDataArgs = this.find(chipWrapper);\n        } else {\n          var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + exports.classNames.chip)).indexOf(chipWrapper);\n          chipDataArgs = {\n            text: this.innerText ? this.innerText : this.text,\n            element: chipWrapper,\n            data: this.text,\n            index: index\n          };\n        }\n\n        chipDataArgs.event = e;\n        chipDataArgs.cancel = false;\n        this.trigger('beforeClick', chipDataArgs, function (observedArgs) {\n          if (!observedArgs.cancel) {\n            _this.clickEventHandler(observedArgs.element, e, del);\n          }\n        });\n      }\n    };\n\n    ChipList.prototype.clickEventHandler = function (chipWrapper, e, del) {\n      var _this = this;\n\n      if (this.chipType()) {\n        var chipData_1 = this.find(chipWrapper);\n        chipData_1.event = e;\n        var deleteElement = e.target.classList.contains(exports.classNames.deleteIcon) ? e.target : del ? chipWrapper.querySelector('.' + exports.classNames.deleteIcon) : undefined;\n\n        if (deleteElement && this.enableDelete) {\n          chipData_1.cancel = false;\n          var deletedItemArgs = chipData_1;\n          this.trigger('delete', deletedItemArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n              _this.deleteHandler(observedArgs.element, observedArgs.index);\n\n              _this.selectionHandler(chipWrapper);\n\n              chipData_1.selected = observedArgs.element.classList.contains(exports.classNames.active);\n              var selectedItemArgs = chipData_1;\n\n              _this.trigger('click', selectedItemArgs);\n\n              var chipElement = _this.element.querySelectorAll('.' + exports.classNames.chip)[observedArgs.index];\n\n              if (chipElement) {\n                chipElement.focus();\n\n                _this.focusInHandler(chipElement);\n              }\n            }\n          });\n        } else if (this.selection !== 'None') {\n          this.selectionHandler(chipWrapper);\n          chipData_1.selected = chipWrapper.classList.contains(exports.classNames.active);\n          var selectedItemArgs = chipData_1;\n          this.trigger('click', selectedItemArgs);\n        } else {\n          this.focusInHandler(chipWrapper);\n          var clickedItemArgs = chipData_1;\n          this.trigger('click', clickedItemArgs);\n        }\n      } else {\n        this.focusInHandler(chipWrapper);\n        var clickedItemArgs = {\n          text: this.innerText ? this.innerText : this.text,\n          element: chipWrapper,\n          data: this.text,\n          event: e\n        };\n        this.trigger('click', clickedItemArgs);\n      }\n    };\n\n    ChipList.prototype.selectionHandler = function (chipWrapper) {\n      if (this.selection === 'Single') {\n        var activeElement = this.element.querySelector('.' + exports.classNames.active);\n\n        if (activeElement && activeElement !== chipWrapper) {\n          activeElement.classList.remove(exports.classNames.active);\n          activeElement.setAttribute('aria-selected', 'false');\n        }\n\n        this.setProperties({\n          selectedChips: null\n        }, true);\n      } else {\n        this.setProperties({\n          selectedChips: []\n        }, true);\n      }\n\n      if (chipWrapper.classList.contains(exports.classNames.active)) {\n        chipWrapper.classList.remove(exports.classNames.active);\n        chipWrapper.setAttribute('aria-selected', 'false');\n      } else {\n        chipWrapper.classList.add(exports.classNames.active);\n        chipWrapper.setAttribute('aria-selected', 'true');\n      }\n\n      this.updateSelectedChips();\n    };\n\n    ChipList.prototype.updateSelectedChips = function () {\n      var chipListEle = this.element.querySelectorAll('.e-chip');\n      var chipCollIndex = [];\n      var chipCollValue = [];\n      var chip = null;\n      var value;\n\n      for (var i = 0; i < chipListEle.length; i++) {\n        var selectedEle = this.element.querySelectorAll('.e-chip')[i];\n\n        if (selectedEle.getAttribute('aria-selected') === 'true') {\n          value = selectedEle.getAttribute('data-value');\n\n          if (this.selection === 'Single' && selectedEle.classList.contains('e-active')) {\n            chip = value ? value : i;\n            break;\n          } else {\n            chip = value ? chipCollValue.push(value) : chipCollIndex.push(i);\n          }\n        }\n      }\n\n      this.setProperties({\n        selectedChips: this.selection === 'Single' ? chip : value ? chipCollValue : chipCollIndex\n      }, true);\n    };\n\n    ChipList.prototype.deleteHandler = function (chipWrapper, index) {\n      var deletedChipData = this.find(chipWrapper);\n      this.chips.splice(index, 1);\n      this.setProperties({\n        chips: this.chips\n      }, true);\n      ej2_base_3.detach(chipWrapper);\n      this.trigger('deleted', deletedChipData);\n    };\n\n    ChipList.prototype.destroy = function () {\n      ej2_base_2.removeClass([this.element], [exports.classNames.chipSet, exports.classNames.chip, exports.classNames.rtl, exports.classNames.multiSelection, exports.classNames.singleSelection, exports.classNames.disabled, exports.classNames.chipWrapper, exports.classNames.iconWrapper, exports.classNames.active, exports.classNames.focused].concat(this.cssClass.toString().split(' ').filter(function (css) {\n        return css;\n      })));\n      this.removeMultipleAttributes(['tabindex', 'role', 'aria-label', 'aria-multiselectable'], this.element);\n      this.wireEvent(true);\n      this.rippleFunction();\n\n      _super.prototype.destroy.call(this);\n\n      this.element.innerHTML = '';\n      this.element.innerText = this.innerText;\n    };\n\n    ChipList.prototype.removeMultipleAttributes = function (attributes, element) {\n      attributes.forEach(function (attr) {\n        element.removeAttribute(attr);\n      });\n    };\n\n    ChipList.prototype.getPersistData = function () {\n      return this.addOnPersist([]);\n    };\n\n    ChipList.prototype.getModuleName = function () {\n      return 'chip-list';\n    };\n\n    ChipList.prototype.onPropertyChanged = function (newProp, oldProp) {\n      var property;\n\n      for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        switch (prop) {\n          case 'chips':\n          case 'text':\n          case 'avatarText':\n          case 'avatarIconCss':\n          case 'leadingIconCss':\n          case 'trailingIconCss':\n          case 'selection':\n          case 'enableDelete':\n          case 'enabled':\n            this.refresh();\n            break;\n\n          case 'cssClass':\n            if (!this.chipType()) {\n              ej2_base_2.removeClass([this.element], oldProp.cssClass.toString().split(' ').filter(function (css) {\n                return css;\n              }));\n              ej2_base_3.addClass([this.element], newProp.cssClass.toString().split(' ').filter(function (css) {\n                return css;\n              }));\n            } else {\n              this.refresh();\n            }\n\n            break;\n\n          case 'selectedChips':\n            ej2_base_2.removeClass(this.element.querySelectorAll('.e-active'), 'e-active');\n\n            if (this.selection === 'Multiple') {\n              this.multiSelectedChip = [];\n              this.multiSelection(newProp.selectedChips);\n              this.onSelect(this.multiSelectedChip, true, property);\n              this.updateSelectedChips();\n            } else {\n              this.onSelect(newProp.selectedChips, true, property);\n            }\n\n            break;\n\n          case 'enableRtl':\n            this.setRtl();\n            break;\n        }\n      }\n    };\n\n    __decorate([ej2_base_1.Property([])], ChipList.prototype, \"chips\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"text\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"avatarText\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"avatarIconCss\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"leadingIconCss\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"trailingIconCss\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"leadingIconUrl\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"trailingIconUrl\", void 0);\n\n    __decorate([ej2_base_1.Property('')], ChipList.prototype, \"cssClass\", void 0);\n\n    __decorate([ej2_base_1.Property(true)], ChipList.prototype, \"enabled\", void 0);\n\n    __decorate([ej2_base_1.Property([])], ChipList.prototype, \"selectedChips\", void 0);\n\n    __decorate([ej2_base_1.Property('None')], ChipList.prototype, \"selection\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], ChipList.prototype, \"enableDelete\", void 0);\n\n    __decorate([ej2_base_3.Event()], ChipList.prototype, \"created\", void 0);\n\n    __decorate([ej2_base_3.Event()], ChipList.prototype, \"click\", void 0);\n\n    __decorate([ej2_base_3.Event()], ChipList.prototype, \"beforeClick\", void 0);\n\n    __decorate([ej2_base_3.Event()], ChipList.prototype, \"delete\", void 0);\n\n    __decorate([ej2_base_3.Event()], ChipList.prototype, \"deleted\", void 0);\n\n    ChipList = __decorate([ej2_base_1.NotifyPropertyChanges], ChipList);\n    return ChipList;\n  }(ej2_base_1.Component);\n\n  exports.ChipList = ChipList;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/chips/chip-list.js?");

/***/ }),

/***/ "./src/chips/chip.js":
/*!***************************!*\
  !*** ./src/chips/chip.js ***!
  \***************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  var Chip = function () {\n    function Chip() {}\n\n    return Chip;\n  }();\n\n  exports.Chip = Chip;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/chips/chip.js?");

/***/ }),

/***/ "./src/chips/index.js":
/*!****************************!*\
  !*** ./src/chips/index.js ***!
  \****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./chip-list */ \"./src/chips/chip-list.js\"), __webpack_require__(/*! ./chip */ \"./src/chips/chip.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, chip_list_1, chip_1) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(chip_list_1);\n\n  __export(chip_1);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/chips/index.js?");

/***/ }),

/***/ "./src/common/common.js":
/*!******************************!*\
  !*** ./src/common/common.js ***!
  \******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_base_2) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  function wrapperInitialize(createElement, tag, type, element, WRAPPER, role) {\n    var input = element;\n\n    if (element.tagName === tag) {\n      var ejInstance = ej2_base_2.getValue('ej2_instances', element);\n      input = createElement('input', {\n        attrs: {\n          'type': type\n        }\n      });\n      var props = ['change', 'cssClass', 'label', 'labelPosition', 'id'];\n\n      for (var index = 0, len = element.attributes.length; index < len; index++) {\n        if (props.indexOf(element.attributes[index].nodeName) === -1) {\n          input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);\n        }\n      }\n\n      ej2_base_1.attributes(element, {\n        'class': WRAPPER,\n        'aria-checked': 'false'\n      });\n      element.appendChild(input);\n      ej2_base_1.setValue('ej2_instances', ejInstance, input);\n      ej2_base_2.deleteObject(element, 'ej2_instances');\n    }\n\n    return input;\n  }\n\n  exports.wrapperInitialize = wrapperInitialize;\n\n  function getTextNode(element) {\n    var node;\n    var childnode = element.childNodes;\n\n    for (var i = 0; i < childnode.length; i++) {\n      node = childnode[i];\n\n      if (node.nodeType === 3) {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  exports.getTextNode = getTextNode;\n\n  function destroy(ejInst, wrapper, tagName) {\n    if (tagName === 'INPUT') {\n      wrapper.parentNode.insertBefore(ejInst.element, wrapper);\n      ej2_base_1.detach(wrapper);\n      ejInst.element.checked = false;\n      ['name', 'value', 'disabled'].forEach(function (key) {\n        ejInst.element.removeAttribute(key);\n      });\n    } else {\n      ['role', 'aria-checked', 'class'].forEach(function (key) {\n        wrapper.removeAttribute(key);\n      });\n      wrapper.innerHTML = '';\n    }\n  }\n\n  exports.destroy = destroy;\n\n  function preRender(proxy, control, wrapper, element, moduleName) {\n    element = wrapperInitialize(proxy.createElement, control, 'checkbox', element, wrapper, moduleName);\n    proxy.element = element;\n\n    if (proxy.element.getAttribute('type') !== 'checkbox') {\n      proxy.element.setAttribute('type', 'checkbox');\n    }\n\n    if (!proxy.element.id) {\n      proxy.element.id = ej2_base_1.getUniqueID('e-' + moduleName);\n    }\n  }\n\n  exports.preRender = preRender;\n\n  function createCheckBox(createElement, enableRipple, options) {\n    if (enableRipple === void 0) {\n      enableRipple = false;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var wrapper = createElement('div', {\n      className: 'e-checkbox-wrapper e-css'\n    });\n\n    if (options.cssClass) {\n      ej2_base_2.addClass([wrapper], options.cssClass.split(' '));\n    }\n\n    if (options.enableRtl) {\n      wrapper.classList.add('e-rtl');\n    }\n\n    if (enableRipple) {\n      var rippleSpan = createElement('span', {\n        className: 'e-ripple-container'\n      });\n      ej2_base_1.rippleEffect(rippleSpan, {\n        isCenterRipple: true,\n        duration: 400\n      });\n      wrapper.appendChild(rippleSpan);\n    }\n\n    var frameSpan = createElement('span', {\n      className: 'e-frame e-icons'\n    });\n\n    if (options.checked) {\n      frameSpan.classList.add('e-check');\n    }\n\n    wrapper.appendChild(frameSpan);\n\n    if (options.label) {\n      var labelSpan = createElement('span', {\n        className: 'e-label'\n      });\n\n      if (options.disableHtmlEncode) {\n        labelSpan.textContent = options.label;\n      } else {\n        labelSpan.innerHTML = options.label;\n      }\n\n      wrapper.appendChild(labelSpan);\n    }\n\n    return wrapper;\n  }\n\n  exports.createCheckBox = createCheckBox;\n\n  function rippleMouseHandler(e, rippleSpan) {\n    if (rippleSpan) {\n      var event_1 = document.createEvent('MouseEvents');\n      event_1.initEvent(e.type, false, true);\n      rippleSpan.dispatchEvent(event_1);\n    }\n  }\n\n  exports.rippleMouseHandler = rippleMouseHandler;\n\n  function setHiddenInput(proxy, wrap) {\n    if (proxy.element.getAttribute('ejs-for')) {\n      wrap.appendChild(proxy.createElement('input', {\n        attrs: {\n          'name': proxy.name || proxy.element.name,\n          'value': 'false',\n          'type': 'hidden'\n        }\n      }));\n    }\n  }\n\n  exports.setHiddenInput = setHiddenInput;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/common/common.js?");

/***/ }),

/***/ "./src/common/index.js":
/*!*****************************!*\
  !*** ./src/common/index.js ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./common */ \"./src/common/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, common_1) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(common_1);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/common/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./common/index */ \"./src/common/index.js\"), __webpack_require__(/*! ./button/index */ \"./src/button/index.js\"), __webpack_require__(/*! ./check-box/index */ \"./src/check-box/index.js\"), __webpack_require__(/*! ./radio-button/index */ \"./src/radio-button/index.js\"), __webpack_require__(/*! ./switch/index */ \"./src/switch/index.js\"), __webpack_require__(/*! ./chips/index */ \"./src/chips/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, index_1, index_2, index_3, index_4, index_5, index_6) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(index_1);\n\n  __export(index_2);\n\n  __export(index_3);\n\n  __export(index_4);\n\n  __export(index_5);\n\n  __export(index_6);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/index.js?");

/***/ }),

/***/ "./src/radio-button/index.js":
/*!***********************************!*\
  !*** ./src/radio-button/index.js ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./radio-button */ \"./src/radio-button/radio-button.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, radio_button_1) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(radio_button_1);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/radio-button/index.js?");

/***/ }),

/***/ "./src/radio-button/radio-button.js":
/*!******************************************!*\
  !*** ./src/radio-button/radio-button.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! ./../common/common */ \"./src/common/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, common_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  var LABEL = 'e-label';\n  var RIPPLE = 'e-ripple-container';\n  var RTL = 'e-rtl';\n  var WRAPPER = 'e-radio-wrapper';\n  var ATTRIBUTES = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];\n\n  var RadioButton = function (_super) {\n    __extends(RadioButton, _super);\n\n    function RadioButton(options, element) {\n      var _this = _super.call(this, options, element) || this;\n\n      _this.isFocused = false;\n      return _this;\n    }\n\n    RadioButton_1 = RadioButton;\n\n    RadioButton.prototype.changeHandler = function (event) {\n      this.checked = true;\n      this.dataBind();\n      var value = this.element.getAttribute('value');\n      value = this.isVue && value ? this.element.value : this.value;\n      this.trigger('change', {\n        value: value,\n        event: event\n      });\n\n      if (this.tagName === 'EJS-RADIOBUTTON') {\n        event.stopPropagation();\n      }\n    };\n\n    RadioButton.prototype.updateChange = function () {\n      var input;\n      var instance;\n      var radioGrp = this.getRadioGroup();\n\n      for (var i = 0; i < radioGrp.length; i++) {\n        input = radioGrp[i];\n\n        if (input !== this.element) {\n          instance = ej2_base_2.getInstance(input, RadioButton_1);\n          instance.checked = false;\n\n          if (this.tagName === 'EJS-RADIOBUTTON') {\n            instance.angularValue = this.value;\n          }\n        }\n      }\n    };\n\n    RadioButton.prototype.destroy = function () {\n      var _this = this;\n\n      var radioWrap = this.wrapper;\n\n      _super.prototype.destroy.call(this);\n\n      if (radioWrap) {\n        if (!this.disabled) {\n          this.unWireEvents();\n        }\n\n        if (this.tagName === 'INPUT') {\n          if (radioWrap.parentNode) {\n            radioWrap.parentNode.insertBefore(this.element, radioWrap);\n          }\n\n          ej2_base_3.detach(radioWrap);\n          this.element.checked = false;\n          ['name', 'value', 'disabled'].forEach(function (key) {\n            _this.element.removeAttribute(key);\n          });\n        } else {\n          ['role', 'aria-checked', 'class'].forEach(function (key) {\n            radioWrap.removeAttribute(key);\n          });\n          radioWrap.innerHTML = '';\n        }\n      }\n    };\n\n    RadioButton.prototype.focusHandler = function () {\n      this.isFocused = true;\n    };\n\n    RadioButton.prototype.focusOutHandler = function () {\n      var label = this.getLabel();\n\n      if (label) {\n        label.classList.remove('e-focus');\n      }\n    };\n\n    RadioButton.prototype.getModuleName = function () {\n      return 'radio';\n    };\n\n    RadioButton.prototype.getSelectedValue = function () {\n      var input;\n      var radioGrp = this.getRadioGroup();\n\n      for (var i = 0, len = radioGrp.length; i < len; i++) {\n        input = radioGrp[i];\n\n        if (input.checked) {\n          return input.value;\n        }\n      }\n\n      return '';\n    };\n\n    RadioButton.prototype.getRadioGroup = function () {\n      return document.querySelectorAll('input.e-radio[name=\"' + this.element.getAttribute('name') + '\"]');\n    };\n\n    RadioButton.prototype.getPersistData = function () {\n      return this.addOnPersist(['checked']);\n    };\n\n    RadioButton.prototype.getWrapper = function () {\n      if (this.element) {\n        return this.element.parentElement;\n      } else {\n        return null;\n      }\n    };\n\n    RadioButton.prototype.getLabel = function () {\n      if (this.element) {\n        return this.element.nextElementSibling;\n      } else {\n        return null;\n      }\n    };\n\n    RadioButton.prototype.initialize = function () {\n      if (ej2_base_2.isNullOrUndefined(this.initialCheckedValue)) {\n        this.initialCheckedValue = this.checked;\n      }\n\n      this.initWrapper();\n      this.updateHtmlAttribute();\n\n      if (this.name) {\n        this.element.setAttribute('name', this.name);\n      }\n\n      var value = this.element.getAttribute('value');\n\n      if (this.isVue && value && value === this.value) {\n        this.checked = true;\n      }\n\n      if (this.isVue ? this.value && !value : this.value) {\n        this.element.setAttribute('value', this.value);\n      }\n\n      if (this.checked) {\n        this.element.checked = true;\n      }\n\n      if (this.disabled) {\n        this.setDisabled();\n      }\n    };\n\n    RadioButton.prototype.initWrapper = function () {\n      var rippleSpan;\n      var wrapper = this.element.parentElement;\n\n      if (!wrapper.classList.contains(WRAPPER)) {\n        wrapper = this.createElement('div', {\n          className: WRAPPER\n        });\n        this.element.parentNode.insertBefore(wrapper, this.element);\n      }\n\n      var label = this.createElement('label', {\n        attrs: {\n          \"for\": this.element.id\n        }\n      });\n      wrapper.appendChild(this.element);\n      wrapper.appendChild(label);\n\n      if (ej2_base_2.isRippleEnabled) {\n        rippleSpan = this.createElement('span', {\n          className: RIPPLE\n        });\n        label.appendChild(rippleSpan);\n        ej2_base_1.rippleEffect(rippleSpan, {\n          duration: 400,\n          isCenterRipple: true\n        });\n      }\n\n      wrapper.classList.add('e-wrapper');\n\n      if (this.enableRtl) {\n        label.classList.add(RTL);\n      }\n\n      if (this.cssClass) {\n        ej2_base_2.addClass([wrapper], this.cssClass.split(' '));\n      }\n\n      if (this.label) {\n        this.setText(this.label);\n      }\n    };\n\n    RadioButton.prototype.keyUpHandler = function () {\n      if (this.isFocused) {\n        this.getLabel().classList.add('e-focus');\n      }\n    };\n\n    RadioButton.prototype.labelRippleHandler = function (e) {\n      var ripple = this.getLabel().getElementsByClassName(RIPPLE)[0];\n      common_1.rippleMouseHandler(e, ripple);\n    };\n\n    RadioButton.prototype.formResetHandler = function () {\n      this.checked = this.initialCheckedValue;\n\n      if (this.initialCheckedValue) {\n        ej2_base_2.attributes(this.element, {\n          'checked': 'true'\n        });\n      }\n    };\n\n    RadioButton.prototype.onPropertyChanged = function (newProp, oldProp) {\n      var wrap = this.getWrapper();\n      var label = this.getLabel();\n\n      for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        switch (prop) {\n          case 'checked':\n            if (newProp.checked) {\n              this.updateChange();\n            }\n\n            this.element.checked = newProp.checked;\n            break;\n\n          case 'disabled':\n            if (newProp.disabled) {\n              this.setDisabled();\n              this.unWireEvents();\n            } else {\n              this.element.disabled = false;\n              this.wireEvents();\n            }\n\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              ej2_base_2.removeClass([wrap], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              ej2_base_2.addClass([wrap], newProp.cssClass.split(' '));\n            }\n\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              label.classList.add(RTL);\n            } else {\n              label.classList.remove(RTL);\n            }\n\n            break;\n\n          case 'label':\n            this.setText(newProp.label);\n            break;\n\n          case 'labelPosition':\n            if (newProp.labelPosition === 'Before') {\n              label.classList.add('e-right');\n            } else {\n              label.classList.remove('e-right');\n            }\n\n            break;\n\n          case 'name':\n            this.element.setAttribute('name', newProp.name);\n            break;\n\n          case 'value':\n            if (!ej2_base_2.isNullOrUndefined(this.htmlAttributes) && this.htmlAttributes.value) {\n              break;\n            }\n\n            this.element.setAttribute('value', newProp.value);\n            break;\n\n          case 'htmlAttributes':\n            this.updateHtmlAttribute();\n            break;\n        }\n      }\n    };\n\n    RadioButton.prototype.preRender = function () {\n      var element = this.element;\n      this.formElement = ej2_base_1.closest(this.element, 'form');\n      this.tagName = this.element.tagName;\n      element = common_1.wrapperInitialize(this.createElement, 'EJS-RADIOBUTTON', 'radio', element, WRAPPER, 'radio');\n      this.element = element;\n\n      if (this.element.getAttribute('type') !== 'radio') {\n        this.element.setAttribute('type', 'radio');\n      }\n\n      if (!this.element.id) {\n        this.element.id = ej2_base_2.getUniqueID('e-' + this.getModuleName());\n      }\n\n      if (this.tagName === 'EJS-RADIOBUTTON') {\n        var formControlName = this.element.getAttribute('formcontrolname');\n\n        if (formControlName) {\n          this.setProperties({\n            'name': formControlName\n          }, true);\n          this.element.setAttribute('name', formControlName);\n        }\n      }\n    };\n\n    RadioButton.prototype.render = function () {\n      this.initialize();\n\n      if (!this.disabled) {\n        this.wireEvents();\n      }\n\n      this.renderComplete();\n      this.wrapper = this.getWrapper();\n    };\n\n    RadioButton.prototype.setDisabled = function () {\n      this.element.disabled = true;\n    };\n\n    RadioButton.prototype.setText = function (text) {\n      var label = this.getLabel();\n      var textLabel = label.getElementsByClassName(LABEL)[0];\n\n      if (textLabel) {\n        textLabel.textContent = text;\n      } else {\n        text = this.enableHtmlSanitizer ? ej2_base_3.SanitizeHtmlHelper.sanitize(text) : text;\n        textLabel = this.createElement('span', {\n          className: LABEL,\n          innerHTML: text\n        });\n        label.appendChild(textLabel);\n      }\n\n      if (this.labelPosition === 'Before') {\n        this.getLabel().classList.add('e-right');\n      } else {\n        this.getLabel().classList.remove('e-right');\n      }\n    };\n\n    RadioButton.prototype.updateHtmlAttribute = function () {\n      if (!ej2_base_2.isNullOrUndefined(this.htmlAttributes)) {\n        for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n          var key = _a[_i];\n\n          if (ATTRIBUTES.indexOf(key) > -1) {\n            var wrapper = this.element.parentElement;\n\n            if (key === 'class') {\n              ej2_base_2.addClass([wrapper], this.htmlAttributes[key].split(' '));\n            } else if (key === 'title' || key === 'style') {\n              wrapper.setAttribute(key, this.htmlAttributes[key]);\n            } else {\n              this.element.setAttribute(key, this.htmlAttributes[key]);\n            }\n          }\n        }\n      }\n    };\n\n    RadioButton.prototype.unWireEvents = function () {\n      var label = this.wrapper;\n      ej2_base_3.EventHandler.remove(this.element, 'change', this.changeHandler);\n      ej2_base_3.EventHandler.remove(this.element, 'focus', this.focusHandler);\n      ej2_base_3.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      ej2_base_3.EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n      var rippleLabel = label.getElementsByTagName('label')[0];\n\n      if (rippleLabel) {\n        ej2_base_3.EventHandler.remove(rippleLabel, 'mousedown', this.labelRippleHandler);\n        ej2_base_3.EventHandler.remove(rippleLabel, 'mouseup', this.labelRippleHandler);\n      }\n\n      if (this.formElement) {\n        ej2_base_3.EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n      }\n    };\n\n    RadioButton.prototype.wireEvents = function () {\n      var label = this.getLabel();\n      ej2_base_3.EventHandler.add(this.element, 'change', this.changeHandler, this);\n      ej2_base_3.EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n      ej2_base_3.EventHandler.add(this.element, 'focus', this.focusHandler, this);\n      ej2_base_3.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      var rippleLabel = label.getElementsByClassName(LABEL)[0];\n\n      if (rippleLabel) {\n        ej2_base_3.EventHandler.add(rippleLabel, 'mousedown', this.labelRippleHandler, this);\n        ej2_base_3.EventHandler.add(rippleLabel, 'mouseup', this.labelRippleHandler, this);\n      }\n\n      if (this.formElement) {\n        ej2_base_3.EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n      }\n    };\n\n    RadioButton.prototype.click = function () {\n      this.element.click();\n    };\n\n    RadioButton.prototype.focusIn = function () {\n      this.element.focus();\n    };\n\n    var RadioButton_1;\n\n    __decorate([ej2_base_3.Event()], RadioButton.prototype, \"change\", void 0);\n\n    __decorate([ej2_base_3.Event()], RadioButton.prototype, \"created\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], RadioButton.prototype, \"checked\", void 0);\n\n    __decorate([ej2_base_1.Property('')], RadioButton.prototype, \"cssClass\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], RadioButton.prototype, \"disabled\", void 0);\n\n    __decorate([ej2_base_1.Property('')], RadioButton.prototype, \"label\", void 0);\n\n    __decorate([ej2_base_1.Property('After')], RadioButton.prototype, \"labelPosition\", void 0);\n\n    __decorate([ej2_base_1.Property('')], RadioButton.prototype, \"name\", void 0);\n\n    __decorate([ej2_base_1.Property('')], RadioButton.prototype, \"value\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], RadioButton.prototype, \"enableHtmlSanitizer\", void 0);\n\n    __decorate([ej2_base_1.Property({})], RadioButton.prototype, \"htmlAttributes\", void 0);\n\n    RadioButton = RadioButton_1 = __decorate([ej2_base_1.NotifyPropertyChanges], RadioButton);\n    return RadioButton;\n  }(ej2_base_1.Component);\n\n  exports.RadioButton = RadioButton;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/radio-button/radio-button.js?");

/***/ }),

/***/ "./src/switch/index.js":
/*!*****************************!*\
  !*** ./src/switch/index.js ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./switch */ \"./src/switch/switch.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, switch_1) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n\n  __export(switch_1);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/switch/index.js?");

/***/ }),

/***/ "./src/switch/switch.js":
/*!******************************!*\
  !*** ./src/switch/switch.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! @syncfusion/ej2-base */ \"@syncfusion/ej2-base\"), __webpack_require__(/*! ./../common/common */ \"./src/common/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, common_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  var DISABLED = 'e-switch-disabled';\n  var RIPPLE = 'e-ripple-container';\n  var RIPPLE_CHECK = 'e-ripple-check';\n  var RTL = 'e-rtl';\n  var WRAPPER = 'e-switch-wrapper';\n  var ACTIVE = 'e-switch-active';\n\n  var Switch = function (_super) {\n    __extends(Switch, _super);\n\n    function Switch(options, element) {\n      var _this = _super.call(this, options, element) || this;\n\n      _this.isFocused = false;\n      _this.isDrag = false;\n      return _this;\n    }\n\n    Switch.prototype.changeState = function (state) {\n      var ariaState;\n      var rippleSpan;\n      var wrapper = this.getWrapper();\n      var bar = wrapper.querySelector('.e-switch-inner');\n      var handle = wrapper.querySelector('.e-switch-handle');\n\n      if (ej2_base_3.isRippleEnabled) {\n        rippleSpan = wrapper.getElementsByClassName(RIPPLE)[0];\n      }\n\n      if (state) {\n        ej2_base_3.addClass([bar, handle], ACTIVE);\n        ariaState = 'true';\n        this.element.checked = true;\n        this.checked = true;\n\n        if (rippleSpan) {\n          ej2_base_3.addClass([rippleSpan], [RIPPLE_CHECK]);\n        }\n      } else {\n        ej2_base_3.removeClass([bar, handle], ACTIVE);\n        ariaState = 'false';\n        this.element.checked = false;\n        this.checked = false;\n\n        if (rippleSpan) {\n          ej2_base_3.removeClass([rippleSpan], [RIPPLE_CHECK]);\n        }\n      }\n\n      wrapper.setAttribute('aria-checked', ariaState);\n    };\n\n    Switch.prototype.clickHandler = function (evt) {\n      this.isDrag = false;\n      this.focusOutHandler();\n      this.changeState(!this.checked);\n      this.element.focus();\n      var changeEventArgs = {\n        checked: this.element.checked,\n        event: evt\n      };\n      this.trigger('change', changeEventArgs);\n    };\n\n    Switch.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      if (!this.disabled) {\n        this.unWireEvents();\n      }\n\n      common_1.destroy(this, this.getWrapper(), this.tagName);\n    };\n\n    Switch.prototype.focusHandler = function () {\n      this.isFocused = true;\n    };\n\n    Switch.prototype.focusOutHandler = function () {\n      this.getWrapper().classList.remove('e-focus');\n    };\n\n    Switch.prototype.getModuleName = function () {\n      return 'switch';\n    };\n\n    Switch.prototype.getPersistData = function () {\n      return this.addOnPersist(['checked']);\n    };\n\n    Switch.prototype.getWrapper = function () {\n      return this.element.parentElement;\n    };\n\n    Switch.prototype.initialize = function () {\n      if (ej2_base_3.isNullOrUndefined(this.initialSwitchCheckedValue)) {\n        this.initialSwitchCheckedValue = this.checked;\n      }\n\n      if (this.name) {\n        this.element.setAttribute('name', this.name);\n      }\n\n      if (this.value) {\n        this.element.setAttribute('value', this.value);\n      }\n\n      if (this.checked) {\n        this.changeState(true);\n      }\n\n      if (this.disabled) {\n        this.setDisabled();\n      }\n\n      if (this.onLabel || this.offLabel) {\n        this.setLabel(this.onLabel, this.offLabel);\n      }\n    };\n\n    Switch.prototype.initWrapper = function () {\n      var wrapper = this.element.parentElement;\n\n      if (!wrapper.classList.contains(WRAPPER)) {\n        wrapper = this.createElement('div', {\n          className: WRAPPER,\n          attrs: {\n            'aria-checked': 'false'\n          }\n        });\n        this.element.parentNode.insertBefore(wrapper, this.element);\n      }\n\n      var switchInner = this.createElement('span', {\n        className: 'e-switch-inner'\n      });\n      var onLabel = this.createElement('span', {\n        className: 'e-switch-on'\n      });\n      var offLabel = this.createElement('span', {\n        className: 'e-switch-off'\n      });\n      var handle = this.createElement('span', {\n        className: 'e-switch-handle'\n      });\n      wrapper.appendChild(this.element);\n      common_1.setHiddenInput(this, wrapper);\n      switchInner.appendChild(onLabel);\n      switchInner.appendChild(offLabel);\n      wrapper.appendChild(switchInner);\n      wrapper.appendChild(handle);\n\n      if (ej2_base_3.isRippleEnabled) {\n        var rippleSpan = this.createElement('span', {\n          className: RIPPLE\n        });\n        handle.appendChild(rippleSpan);\n        ej2_base_3.rippleEffect(rippleSpan, {\n          duration: 400,\n          isCenterRipple: true\n        });\n      }\n\n      wrapper.classList.add('e-wrapper');\n\n      if (this.enableRtl) {\n        wrapper.classList.add(RTL);\n      }\n\n      if (this.cssClass) {\n        ej2_base_3.addClass([wrapper], this.cssClass.split(' '));\n      }\n    };\n\n    Switch.prototype.onPropertyChanged = function (newProp, oldProp) {\n      var wrapper = this.getWrapper();\n\n      for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        switch (prop) {\n          case 'checked':\n            this.changeState(newProp.checked);\n            break;\n\n          case 'disabled':\n            if (newProp.disabled) {\n              this.setDisabled();\n              this.unWireEvents();\n            } else {\n              this.element.disabled = false;\n              wrapper.classList.remove(DISABLED);\n              wrapper.setAttribute('aria-disabled', 'false');\n              this.wireEvents();\n            }\n\n            break;\n\n          case 'value':\n            this.element.setAttribute('value', newProp.value);\n            break;\n\n          case 'name':\n            this.element.setAttribute('name', newProp.name);\n            break;\n\n          case 'onLabel':\n          case 'offLabel':\n            this.setLabel(newProp.onLabel, newProp.offLabel);\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              wrapper.classList.add(RTL);\n            } else {\n              wrapper.classList.remove(RTL);\n            }\n\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              ej2_base_3.removeClass([wrapper], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              ej2_base_3.addClass([wrapper], newProp.cssClass.split(' '));\n            }\n\n            break;\n        }\n      }\n    };\n\n    Switch.prototype.preRender = function () {\n      var element = this.element;\n      this.formElement = ej2_base_1.closest(this.element, 'form');\n      this.tagName = this.element.tagName;\n      common_1.preRender(this, 'EJS-SWITCH', WRAPPER, element, this.getModuleName());\n    };\n\n    Switch.prototype.render = function () {\n      this.initWrapper();\n      this.initialize();\n\n      if (!this.disabled) {\n        this.wireEvents();\n      }\n\n      this.renderComplete();\n    };\n\n    Switch.prototype.rippleHandler = function (e) {\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n      common_1.rippleMouseHandler(e, rippleSpan);\n\n      if (e.type === 'mousedown' && e.currentTarget.classList.contains('e-switch-wrapper') && e.which === 1) {\n        this.isDrag = true;\n        this.isFocused = false;\n      }\n    };\n\n    Switch.prototype.rippleTouchHandler = function (eventType) {\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n\n      if (rippleSpan) {\n        var event_1 = document.createEvent('MouseEvents');\n        event_1.initEvent(eventType, false, true);\n        rippleSpan.dispatchEvent(event_1);\n      }\n    };\n\n    Switch.prototype.setDisabled = function () {\n      var wrapper = this.getWrapper();\n      this.element.disabled = true;\n      wrapper.classList.add(DISABLED);\n      wrapper.setAttribute('aria-disabled', 'true');\n    };\n\n    Switch.prototype.setLabel = function (onText, offText) {\n      var wrapper = this.getWrapper();\n\n      if (onText) {\n        wrapper.querySelector('.e-switch-on').textContent = onText;\n      }\n\n      if (offText) {\n        wrapper.querySelector('.e-switch-off').textContent = offText;\n      }\n    };\n\n    Switch.prototype.switchFocusHandler = function () {\n      if (this.isFocused) {\n        this.getWrapper().classList.add('e-focus');\n      }\n    };\n\n    Switch.prototype.switchMouseUp = function (e) {\n      var target = e.target;\n\n      if (e.type === 'touchmove') {\n        e.preventDefault();\n      }\n\n      if (e.type === 'touchstart') {\n        this.isDrag = true;\n        this.rippleTouchHandler('mousedown');\n      }\n\n      if (this.isDrag) {\n        if (e.type === 'mouseup' && target.className.indexOf('e-switch') < 0 || e.type === 'touchend') {\n          this.clickHandler(e);\n          this.rippleTouchHandler('mouseup');\n          e.preventDefault();\n        }\n      }\n    };\n\n    Switch.prototype.formResetHandler = function () {\n      this.checked = this.initialSwitchCheckedValue;\n      this.element.checked = this.initialSwitchCheckedValue;\n    };\n\n    Switch.prototype.toggle = function () {\n      this.clickHandler();\n    };\n\n    Switch.prototype.wireEvents = function () {\n      var wrapper = this.getWrapper();\n      this.delegateMouseUpHandler = this.switchMouseUp.bind(this);\n      this.delegateKeyUpHandler = this.switchFocusHandler.bind(this);\n      ej2_base_2.EventHandler.add(wrapper, 'click', this.clickHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'focus', this.focusHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'mouseup', this.delegateMouseUpHandler, this);\n      ej2_base_2.EventHandler.add(this.element, 'keyup', this.delegateKeyUpHandler, this);\n      ej2_base_2.EventHandler.add(wrapper, 'mousedown mouseup', this.rippleHandler, this);\n      ej2_base_2.EventHandler.add(wrapper, 'touchstart touchmove touchend', this.switchMouseUp, this);\n\n      if (this.formElement) {\n        ej2_base_2.EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n      }\n    };\n\n    Switch.prototype.unWireEvents = function () {\n      var wrapper = this.getWrapper();\n      ej2_base_2.EventHandler.remove(wrapper, 'click', this.clickHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'focus', this.focusHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'mouseup', this.delegateMouseUpHandler);\n      ej2_base_2.EventHandler.remove(this.element, 'keyup', this.delegateKeyUpHandler);\n      ej2_base_2.EventHandler.remove(wrapper, 'mousedown mouseup', this.rippleHandler);\n      ej2_base_2.EventHandler.remove(wrapper, 'touchstart touchmove touchend', this.switchMouseUp);\n\n      if (this.formElement) {\n        ej2_base_2.EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n      }\n    };\n\n    Switch.prototype.click = function () {\n      this.element.click();\n    };\n\n    Switch.prototype.focusIn = function () {\n      this.element.focus();\n    };\n\n    __decorate([ej2_base_2.Event()], Switch.prototype, \"change\", void 0);\n\n    __decorate([ej2_base_2.Event()], Switch.prototype, \"created\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], Switch.prototype, \"checked\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Switch.prototype, \"cssClass\", void 0);\n\n    __decorate([ej2_base_1.Property(false)], Switch.prototype, \"disabled\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Switch.prototype, \"name\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Switch.prototype, \"onLabel\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Switch.prototype, \"offLabel\", void 0);\n\n    __decorate([ej2_base_1.Property('')], Switch.prototype, \"value\", void 0);\n\n    Switch = __decorate([ej2_base_1.NotifyPropertyChanges], Switch);\n    return Switch;\n  }(ej2_base_1.Component);\n\n  exports.Switch = Switch;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack://SyncfusionButtons/./src/switch/switch.js?");

/***/ }),

/***/ "@syncfusion/ej2-base":
/*!***************************************!*\
  !*** external "@syncfusion/ej2-base" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@syncfusion/ej2-base");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	exports.SyncfusionButtons = __webpack_exports__;
/******/ 	
/******/ })()
;